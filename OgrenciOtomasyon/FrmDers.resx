<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wEd09ug8Ce4FAAAAABJRU5ErkJggg==
</value>
  </data>
</root>